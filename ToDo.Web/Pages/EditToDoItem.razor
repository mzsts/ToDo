@page "/edittodoitem/{id:int}"
@inject ToDoService ToDoService

@if(item is null)
{
    <MudProgressCircular Color="Color.Info" Size="Size.Large" Indeterminate="true"></MudProgressCircular>
}
else
{
    <ToDoItemEditForm IsCreation="false" Item="item" ParentId="Id"></ToDoItemEditForm>

    if(item.HasSubItems)
    {
       <ToDoSubItemsList Item="item"></ToDoSubItemsList>
    }
}

@code {
    [Parameter]
    public int Id { get; set; }

    private ToDoItem item;

    protected override async Task OnInitializedAsync()
    {
        ToDoService.OnUpdate += async () => await InvokeAsync(StateHasChanged);

        item = ToDoService.ToDoItems.FirstOrDefault(x => x.Id == Id);

        await base.OnInitializedAsync();
    }

    protected override async void OnParametersSet()
    {
        item = ToDoService.ToDoItems.FirstOrDefault(x => x.Id == Id);

        base.OnParametersSet();
    }
}
